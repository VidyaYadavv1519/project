name: build

on:
  push:
    branches: master
  pull_request:
    branches: master

jobs:

  build:
    runs-on: ubuntu-latest
    environment: env
    env:
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USER: ${{secrets.DATABASE_USER}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_HOST: ${{secrets.DATABASE_HOST}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DEBUG: ${{vars.DEBUG}}
      SECRET_KEY: ${{secrets.SECRET_KEY }}
      SQLLITE: ${{vars.SQLLITE}}

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}
          POSTGRES_USER: ${{secrets.DATABASE_USER}}
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Migrate
        working-directory: ./backend
        run: python manage.py migrate

      - name: Tests
        working-directory: ./backend
        run: python manage.py test

      - name: Setup Node
        uses: actions/setup-node@v3

      - name: Install Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run build if present
        working-directory: ./frontend
        run: npm run build --if-present

      - name: Test if present
        working-directory: ./frontend
        run: npm test --if-present
